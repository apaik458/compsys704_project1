import java.util.*;
import com.systemj.ClockDomain;
import com.systemj.Signal;
import com.systemj.input_Channel;
import com.systemj.output_Channel;
import run.GUI;//sysj\SystemCoordinator.sysj line: 1, column: 1

public class SystemCoordinator extends ClockDomain{
  public SystemCoordinator(String name){super(name);}
  Vector currsigs = new Vector();
  private boolean df = false;
  private char [] active;
  private char [] paused;
  private char [] suspended;
  public Signal testInput = new Signal("testInput", Signal.INPUT);
  public Signal Baxter_Start_Load_100 = new Signal("Baxter_Start_Load_100", Signal.INPUT);
  public Signal Baxter_Start_Load_200 = new Signal("Baxter_Start_Load_200", Signal.INPUT);
  public Signal Baxter_Start_UnLoad_100 = new Signal("Baxter_Start_UnLoad_100", Signal.INPUT);
  public Signal Baxter_Start_UnLoad_200 = new Signal("Baxter_Start_UnLoad_200", Signal.INPUT);
  public Signal Baxter_Start_UnLoad_Damaged = new Signal("Baxter_Start_UnLoad_Damaged", Signal.INPUT);
  public Signal Baxter_Done = new Signal("Baxter_Done", Signal.INPUT);
  public Signal bottleAIPoint_100 = new Signal("bottleAIPoint_100", Signal.INPUT);
  public Signal bottleAIPoint_200 = new Signal("bottleAIPoint_200", Signal.INPUT);
  public Signal CMDfb = new Signal("CMDfb", Signal.INPUT);
  public Signal bottleAtPos1 = new Signal("bottleAtPos1", Signal.INPUT);
  public Signal bottleLeftPos5 = new Signal("bottleLeftPos5", Signal.INPUT);
  public Signal dosUnitEvac = new Signal("dosUnitEvac", Signal.INPUT);
  public Signal dosUnitFilled = new Signal("dosUnitFilled", Signal.INPUT);
  public Signal bottleAtPos2 = new Signal("bottleAtPos2", Signal.INPUT);
  public Signal pusherRetracted = new Signal("pusherRetracted", Signal.INPUT);
  public Signal pusherExtended = new Signal("pusherExtended", Signal.INPUT);
  public Signal WPgripped = new Signal("WPgripped", Signal.INPUT);
  public Signal armAtSource = new Signal("armAtSource", Signal.INPUT);
  public Signal armAtDest = new Signal("armAtDest", Signal.INPUT);
  public Signal empty = new Signal("empty", Signal.INPUT);
  public Signal bottleAtPos4 = new Signal("bottleAtPos4", Signal.INPUT);
  public Signal gripperZAxisLowered = new Signal("gripperZAxisLowered", Signal.INPUT);
  public Signal gripperZAxisLifted = new Signal("gripperZAxisLifted", Signal.INPUT);
  public Signal gripperTurnHomePos = new Signal("gripperTurnHomePos", Signal.INPUT);
  public Signal gripperTurnFinalPos = new Signal("gripperTurnFinalPos", Signal.INPUT);
  public Signal bottleAtPos5 = new Signal("bottleAtPos5", Signal.INPUT);
  public Signal bottleLeftPos5_final = new Signal("bottleLeftPos5_final", Signal.INPUT);
  public Signal conveyorStatus = new Signal("conveyorStatus", Signal.INPUT);
  public Signal bottleAIPos5 = new Signal("bottleAIPos5", Signal.INPUT);
  public Signal capOnBottleAIPos1 = new Signal("capOnBottleAIPos1", Signal.INPUT);
  public Signal tableAlignedWithSensor = new Signal("tableAlignedWithSensor", Signal.INPUT);
  public Signal rotaryStatus = new Signal("rotaryStatus", Signal.INPUT);
  public Signal testOutput = new Signal("testOutput", Signal.OUTPUT);
  public Signal SysCo_Baxter_Done = new Signal("SysCo_Baxter_Done", Signal.OUTPUT);
  public Signal CMD = new Signal("CMD", Signal.OUTPUT);
  public Signal SysCo_Initial_Conveyor_Start = new Signal("SysCo_Initial_Conveyor_Start", Signal.OUTPUT);
  public Signal motConveyorOnOff = new Signal("motConveyorOnOff", Signal.OUTPUT);
  public Signal valveInjectorOnOff = new Signal("valveInjectorOnOff", Signal.OUTPUT);
  public Signal valveInletOnOff = new Signal("valveInletOnOff", Signal.OUTPUT);
  public Signal dosUnitValveRetract = new Signal("dosUnitValveRetract", Signal.OUTPUT);
  public Signal dosUnitValveExtend = new Signal("dosUnitValveExtend", Signal.OUTPUT);
  public Signal pusherExtend = new Signal("pusherExtend", Signal.OUTPUT);
  public Signal vacOn = new Signal("vacOn", Signal.OUTPUT);
  public Signal armSource = new Signal("armSource", Signal.OUTPUT);
  public Signal armDest = new Signal("armDest", Signal.OUTPUT);
  public Signal Cap_Load_Request = new Signal("Cap_Load_Request", Signal.OUTPUT);
  public Signal cylPos5ZaxisExtend = new Signal("cylPos5ZaxisExtend", Signal.OUTPUT);
  public Signal gripperTurnExtend = new Signal("gripperTurnExtend", Signal.OUTPUT);
  public Signal capGripperPos5Extend = new Signal("capGripperPos5Extend", Signal.OUTPUT);
  public Signal cylClampBottleExtend = new Signal("cylClampBottleExtend", Signal.OUTPUT);
  public Signal rotaryTableTrigger = new Signal("rotaryTableTrigger", Signal.OUTPUT);
  public Signal motConveyorOnOff_final = new Signal("motConveyorOnOff_final", Signal.OUTPUT);
  public Signal GUI_State_Update = new Signal("GUI_State_Update", Signal.OUTPUT);
  public Signal EABS_Batch_Complete = new Signal("EABS_Batch_Complete", Signal.OUTPUT);
  public Signal EABS_Order_Complete = new Signal("EABS_Order_Complete", Signal.OUTPUT);
  public Signal pusherRetracted_gui = new Signal("pusherRetracted_gui", Signal.OUTPUT);
  public Signal pusherExtended_gui = new Signal("pusherExtended_gui", Signal.OUTPUT);
  public Signal WPgripped_gui = new Signal("WPgripped_gui", Signal.OUTPUT);
  public Signal armAtSource_gui = new Signal("armAtSource_gui", Signal.OUTPUT);
  public Signal armAtDest_gui = new Signal("armAtDest_gui", Signal.OUTPUT);
  public Signal empty_gui = new Signal("empty_gui", Signal.OUTPUT);
  public Signal valveInjectorOnOff_gui = new Signal("valveInjectorOnOff_gui", Signal.OUTPUT);
  public Signal valveInletOnOff_gui = new Signal("valveInletOnOff_gui", Signal.OUTPUT);
  public Signal dosUnitValveRetract_gui = new Signal("dosUnitValveRetract_gui", Signal.OUTPUT);
  public Signal dosUnitValveExtend_gui = new Signal("dosUnitValveExtend_gui", Signal.OUTPUT);
  public Signal dosUnitEvac_gui = new Signal("dosUnitEvac_gui", Signal.OUTPUT);
  public Signal dosUnitFilled_gui = new Signal("dosUnitFilled_gui", Signal.OUTPUT);
  public Signal bottleAtPos1_gui = new Signal("bottleAtPos1_gui", Signal.OUTPUT);
  public Signal bottleAtPos2_gui = new Signal("bottleAtPos2_gui", Signal.OUTPUT);
  public Signal pusherExtend_gui = new Signal("pusherExtend_gui", Signal.OUTPUT);
  public Signal vacOn_gui = new Signal("vacOn_gui", Signal.OUTPUT);
  public Signal armSource_gui = new Signal("armSource_gui", Signal.OUTPUT);
  public Signal armDest_gui = new Signal("armDest_gui", Signal.OUTPUT);
  public Signal bottleAtPos3_gui = new Signal("bottleAtPos3_gui", Signal.OUTPUT);
  public Signal cylPos5ZaxisExtend_gui = new Signal("cylPos5ZaxisExtend_gui", Signal.OUTPUT);
  public Signal gripperTurnExtend_gui = new Signal("gripperTurnExtend_gui", Signal.OUTPUT);
  public Signal gripperTurnRetract_gui = new Signal("gripperTurnRetract_gui", Signal.OUTPUT);
  public Signal capGripperPos5Extend_gui = new Signal("capGripperPos5Extend_gui", Signal.OUTPUT);
  public Signal cylClampBottleExtend_gui = new Signal("cylClampBottleExtend_gui", Signal.OUTPUT);
  public Signal bottleAtPos4_gui = new Signal("bottleAtPos4_gui", Signal.OUTPUT);
  public Signal gripperZAxisLowered_gui = new Signal("gripperZAxisLowered_gui", Signal.OUTPUT);
  public Signal gripperZAxisLifted_gui = new Signal("gripperZAxisLifted_gui", Signal.OUTPUT);
  public Signal gripperTurnHomePos_gui = new Signal("gripperTurnHomePos_gui", Signal.OUTPUT);
  public Signal gripperTurnFinalPos_gui = new Signal("gripperTurnFinalPos_gui", Signal.OUTPUT);
  public Signal motConveyorOnOff_final_gui = new Signal("motConveyorOnOff_final_gui", Signal.OUTPUT);
  public Signal motConveyorOnOff_gui = new Signal("motConveyorOnOff_gui", Signal.OUTPUT);
  public Signal bottleAtPos5_gui = new Signal("bottleAtPos5_gui", Signal.OUTPUT);
  public Signal conveyorStatus_gui = new Signal("conveyorStatus_gui", Signal.OUTPUT);
  public Signal rotaryTableTrigger_gui = new Signal("rotaryTableTrigger_gui", Signal.OUTPUT);
  public Signal rotaryStatus_gui = new Signal("rotaryStatus_gui", Signal.OUTPUT);
  public Signal bottleAIPos5_rotary_gui = new Signal("bottleAIPos5_rotary_gui", Signal.OUTPUT);
  public Signal capOnBottleAIPos1_gui = new Signal("capOnBottleAIPos1_gui", Signal.OUTPUT);
  public Signal tableAlignedWithSensor_gui = new Signal("tableAlignedWithSensor_gui", Signal.OUTPUT);
  public Signal leftArm_POS_A_gui = new Signal("leftArm_POS_A_gui", Signal.OUTPUT);
  public Signal leftArm_POS_A_LOWERED_gui = new Signal("leftArm_POS_A_LOWERED_gui", Signal.OUTPUT);
  public Signal leftArm_POS_A_LOWERED_GRIPPED_gui = new Signal("leftArm_POS_A_LOWERED_GRIPPED_gui", Signal.OUTPUT);
  public Signal leftArm_POS_A_GRIPPED_gui = new Signal("leftArm_POS_A_GRIPPED_gui", Signal.OUTPUT);
  public Signal leftArm_POS_B_gui = new Signal("leftArm_POS_B_gui", Signal.OUTPUT);
  public Signal leftArm_POS_B_LOWERED_gui = new Signal("leftArm_POS_B_LOWERED_gui", Signal.OUTPUT);
  public Signal leftArm_POS_B_LOWERED_GRIPPED_gui = new Signal("leftArm_POS_B_LOWERED_GRIPPED_gui", Signal.OUTPUT);
  public Signal leftArm_POS_B_GRIPPED_gui = new Signal("leftArm_POS_B_GRIPPED_gui", Signal.OUTPUT);
  public Signal leftArm_POS_E_gui = new Signal("leftArm_POS_E_gui", Signal.OUTPUT);
  public Signal leftArm_POS_E_LOWERED_gui = new Signal("leftArm_POS_E_LOWERED_gui", Signal.OUTPUT);
  public Signal leftArm_POS_E_LOWERED_GRIPPED_gui = new Signal("leftArm_POS_E_LOWERED_GRIPPED_gui", Signal.OUTPUT);
  public Signal leftArm_POS_E_GRIPPED_gui = new Signal("leftArm_POS_E_GRIPPED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_A_gui = new Signal("rightArm_POS_A_gui", Signal.OUTPUT);
  public Signal rightArm_POS_A_LOWERED_gui = new Signal("rightArm_POS_A_LOWERED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_A_LOWERED_GRIPPED_gui = new Signal("rightArm_POS_A_LOWERED_GRIPPED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_A_GRIPPED_gui = new Signal("rightArm_POS_A_GRIPPED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_B_gui = new Signal("rightArm_POS_B_gui", Signal.OUTPUT);
  public Signal rightArm_POS_B_LOWERED_gui = new Signal("rightArm_POS_B_LOWERED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_B_LOWERED_GRIPPED_gui = new Signal("rightArm_POS_B_LOWERED_GRIPPED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_B_GRIPPED_gui = new Signal("rightArm_POS_B_GRIPPED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_E_gui = new Signal("rightArm_POS_E_gui", Signal.OUTPUT);
  public Signal rightArm_POS_E_LOWERED_gui = new Signal("rightArm_POS_E_LOWERED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_E_LOWERED_GRIPPED_gui = new Signal("rightArm_POS_E_LOWERED_GRIPPED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_E_GRIPPED_gui = new Signal("rightArm_POS_E_GRIPPED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_F_gui = new Signal("rightArm_POS_F_gui", Signal.OUTPUT);
  public Signal rightArm_POS_F_LOWERED_gui = new Signal("rightArm_POS_F_LOWERED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_F_LOWERED_GRIPPED_gui = new Signal("rightArm_POS_F_LOWERED_GRIPPED_gui", Signal.OUTPUT);
  public Signal rightArm_POS_F_GRIPPED_gui = new Signal("rightArm_POS_F_GRIPPED_gui", Signal.OUTPUT);
  private int S509 = 1;
  
  private int[] ends = new int[2];
  private int[] tdone = new int[2];
  
  public void runClockDomain(){
    for(int i=0;i<ends.length;i++){
      ends[i] = 0;
      tdone[i] = 0;
    }
    
    RUN: while(true){
      switch(S509){
        case 0 : 
          S509=0;
          break RUN;
        
        case 1 : 
          S509=2;
          new Thread(new GUI()).start();//sysj\SystemCoordinator.sysj line: 49, column: 2
          S509=0;
          active[1]=0;
          ends[1]=0;
          S509=0;
          break RUN;
        
      }
    }
  }

  public void init(){
    char [] active1 = {1, 1};
    char [] paused1 = {0, 0};
    char [] suspended1 = {0, 0};
    paused = paused1;
    active = active1;
    suspended = suspended1;
    // Now instantiate all the local signals ONLY
    // --------------------------------------------------
  }
  
  public void run(){
    while(active[1] != 0){
      int index = 1;
      if(paused[index]==1 || suspended[index]==1 || active[index] == 0){
        for(int h=1;h<paused.length;++h){
          paused[h]=0;
        }
      }
      if(paused[1]!=0 || suspended[1]!=0 || active[1]!=1);
      else{
        if(!df){
          testInput.gethook();
          Baxter_Start_Load_100.gethook();
          Baxter_Start_Load_200.gethook();
          Baxter_Start_UnLoad_100.gethook();
          Baxter_Start_UnLoad_200.gethook();
          Baxter_Start_UnLoad_Damaged.gethook();
          Baxter_Done.gethook();
          bottleAIPoint_100.gethook();
          bottleAIPoint_200.gethook();
          CMDfb.gethook();
          bottleAtPos1.gethook();
          bottleLeftPos5.gethook();
          dosUnitEvac.gethook();
          dosUnitFilled.gethook();
          bottleAtPos2.gethook();
          pusherRetracted.gethook();
          pusherExtended.gethook();
          WPgripped.gethook();
          armAtSource.gethook();
          armAtDest.gethook();
          empty.gethook();
          bottleAtPos4.gethook();
          gripperZAxisLowered.gethook();
          gripperZAxisLifted.gethook();
          gripperTurnHomePos.gethook();
          gripperTurnFinalPos.gethook();
          bottleAtPos5.gethook();
          bottleLeftPos5_final.gethook();
          conveyorStatus.gethook();
          bottleAIPos5.gethook();
          capOnBottleAIPos1.gethook();
          tableAlignedWithSensor.gethook();
          rotaryStatus.gethook();
          df = true;
        }
        runClockDomain();
      }
      testInput.setpreclear();
      Baxter_Start_Load_100.setpreclear();
      Baxter_Start_Load_200.setpreclear();
      Baxter_Start_UnLoad_100.setpreclear();
      Baxter_Start_UnLoad_200.setpreclear();
      Baxter_Start_UnLoad_Damaged.setpreclear();
      Baxter_Done.setpreclear();
      bottleAIPoint_100.setpreclear();
      bottleAIPoint_200.setpreclear();
      CMDfb.setpreclear();
      bottleAtPos1.setpreclear();
      bottleLeftPos5.setpreclear();
      dosUnitEvac.setpreclear();
      dosUnitFilled.setpreclear();
      bottleAtPos2.setpreclear();
      pusherRetracted.setpreclear();
      pusherExtended.setpreclear();
      WPgripped.setpreclear();
      armAtSource.setpreclear();
      armAtDest.setpreclear();
      empty.setpreclear();
      bottleAtPos4.setpreclear();
      gripperZAxisLowered.setpreclear();
      gripperZAxisLifted.setpreclear();
      gripperTurnHomePos.setpreclear();
      gripperTurnFinalPos.setpreclear();
      bottleAtPos5.setpreclear();
      bottleLeftPos5_final.setpreclear();
      conveyorStatus.setpreclear();
      bottleAIPos5.setpreclear();
      capOnBottleAIPos1.setpreclear();
      tableAlignedWithSensor.setpreclear();
      rotaryStatus.setpreclear();
      testOutput.setpreclear();
      SysCo_Baxter_Done.setpreclear();
      CMD.setpreclear();
      SysCo_Initial_Conveyor_Start.setpreclear();
      motConveyorOnOff.setpreclear();
      valveInjectorOnOff.setpreclear();
      valveInletOnOff.setpreclear();
      dosUnitValveRetract.setpreclear();
      dosUnitValveExtend.setpreclear();
      pusherExtend.setpreclear();
      vacOn.setpreclear();
      armSource.setpreclear();
      armDest.setpreclear();
      Cap_Load_Request.setpreclear();
      cylPos5ZaxisExtend.setpreclear();
      gripperTurnExtend.setpreclear();
      capGripperPos5Extend.setpreclear();
      cylClampBottleExtend.setpreclear();
      rotaryTableTrigger.setpreclear();
      motConveyorOnOff_final.setpreclear();
      GUI_State_Update.setpreclear();
      EABS_Batch_Complete.setpreclear();
      EABS_Order_Complete.setpreclear();
      pusherRetracted_gui.setpreclear();
      pusherExtended_gui.setpreclear();
      WPgripped_gui.setpreclear();
      armAtSource_gui.setpreclear();
      armAtDest_gui.setpreclear();
      empty_gui.setpreclear();
      valveInjectorOnOff_gui.setpreclear();
      valveInletOnOff_gui.setpreclear();
      dosUnitValveRetract_gui.setpreclear();
      dosUnitValveExtend_gui.setpreclear();
      dosUnitEvac_gui.setpreclear();
      dosUnitFilled_gui.setpreclear();
      bottleAtPos1_gui.setpreclear();
      bottleAtPos2_gui.setpreclear();
      pusherExtend_gui.setpreclear();
      vacOn_gui.setpreclear();
      armSource_gui.setpreclear();
      armDest_gui.setpreclear();
      bottleAtPos3_gui.setpreclear();
      cylPos5ZaxisExtend_gui.setpreclear();
      gripperTurnExtend_gui.setpreclear();
      gripperTurnRetract_gui.setpreclear();
      capGripperPos5Extend_gui.setpreclear();
      cylClampBottleExtend_gui.setpreclear();
      bottleAtPos4_gui.setpreclear();
      gripperZAxisLowered_gui.setpreclear();
      gripperZAxisLifted_gui.setpreclear();
      gripperTurnHomePos_gui.setpreclear();
      gripperTurnFinalPos_gui.setpreclear();
      motConveyorOnOff_final_gui.setpreclear();
      motConveyorOnOff_gui.setpreclear();
      bottleAtPos5_gui.setpreclear();
      conveyorStatus_gui.setpreclear();
      rotaryTableTrigger_gui.setpreclear();
      rotaryStatus_gui.setpreclear();
      bottleAIPos5_rotary_gui.setpreclear();
      capOnBottleAIPos1_gui.setpreclear();
      tableAlignedWithSensor_gui.setpreclear();
      leftArm_POS_A_gui.setpreclear();
      leftArm_POS_A_LOWERED_gui.setpreclear();
      leftArm_POS_A_LOWERED_GRIPPED_gui.setpreclear();
      leftArm_POS_A_GRIPPED_gui.setpreclear();
      leftArm_POS_B_gui.setpreclear();
      leftArm_POS_B_LOWERED_gui.setpreclear();
      leftArm_POS_B_LOWERED_GRIPPED_gui.setpreclear();
      leftArm_POS_B_GRIPPED_gui.setpreclear();
      leftArm_POS_E_gui.setpreclear();
      leftArm_POS_E_LOWERED_gui.setpreclear();
      leftArm_POS_E_LOWERED_GRIPPED_gui.setpreclear();
      leftArm_POS_E_GRIPPED_gui.setpreclear();
      rightArm_POS_A_gui.setpreclear();
      rightArm_POS_A_LOWERED_gui.setpreclear();
      rightArm_POS_A_LOWERED_GRIPPED_gui.setpreclear();
      rightArm_POS_A_GRIPPED_gui.setpreclear();
      rightArm_POS_B_gui.setpreclear();
      rightArm_POS_B_LOWERED_gui.setpreclear();
      rightArm_POS_B_LOWERED_GRIPPED_gui.setpreclear();
      rightArm_POS_B_GRIPPED_gui.setpreclear();
      rightArm_POS_E_gui.setpreclear();
      rightArm_POS_E_LOWERED_gui.setpreclear();
      rightArm_POS_E_LOWERED_GRIPPED_gui.setpreclear();
      rightArm_POS_E_GRIPPED_gui.setpreclear();
      rightArm_POS_F_gui.setpreclear();
      rightArm_POS_F_LOWERED_gui.setpreclear();
      rightArm_POS_F_LOWERED_GRIPPED_gui.setpreclear();
      rightArm_POS_F_GRIPPED_gui.setpreclear();
      int dummyint = 0;
      for(int qw=0;qw<currsigs.size();++qw){
        dummyint = ((Signal)currsigs.elementAt(qw)).getStatus() ? ((Signal)currsigs.elementAt(qw)).setprepresent() : ((Signal)currsigs.elementAt(qw)).setpreclear();
        ((Signal)currsigs.elementAt(qw)).setpreval(((Signal)currsigs.elementAt(qw)).getValue());
      }
      currsigs.removeAllElements();
      dummyint = testInput.getStatus() ? testInput.setprepresent() : testInput.setpreclear();
      testInput.setpreval(testInput.getValue());
      testInput.setClear();
      dummyint = Baxter_Start_Load_100.getStatus() ? Baxter_Start_Load_100.setprepresent() : Baxter_Start_Load_100.setpreclear();
      Baxter_Start_Load_100.setpreval(Baxter_Start_Load_100.getValue());
      Baxter_Start_Load_100.setClear();
      dummyint = Baxter_Start_Load_200.getStatus() ? Baxter_Start_Load_200.setprepresent() : Baxter_Start_Load_200.setpreclear();
      Baxter_Start_Load_200.setpreval(Baxter_Start_Load_200.getValue());
      Baxter_Start_Load_200.setClear();
      dummyint = Baxter_Start_UnLoad_100.getStatus() ? Baxter_Start_UnLoad_100.setprepresent() : Baxter_Start_UnLoad_100.setpreclear();
      Baxter_Start_UnLoad_100.setpreval(Baxter_Start_UnLoad_100.getValue());
      Baxter_Start_UnLoad_100.setClear();
      dummyint = Baxter_Start_UnLoad_200.getStatus() ? Baxter_Start_UnLoad_200.setprepresent() : Baxter_Start_UnLoad_200.setpreclear();
      Baxter_Start_UnLoad_200.setpreval(Baxter_Start_UnLoad_200.getValue());
      Baxter_Start_UnLoad_200.setClear();
      dummyint = Baxter_Start_UnLoad_Damaged.getStatus() ? Baxter_Start_UnLoad_Damaged.setprepresent() : Baxter_Start_UnLoad_Damaged.setpreclear();
      Baxter_Start_UnLoad_Damaged.setpreval(Baxter_Start_UnLoad_Damaged.getValue());
      Baxter_Start_UnLoad_Damaged.setClear();
      dummyint = Baxter_Done.getStatus() ? Baxter_Done.setprepresent() : Baxter_Done.setpreclear();
      Baxter_Done.setpreval(Baxter_Done.getValue());
      Baxter_Done.setClear();
      dummyint = bottleAIPoint_100.getStatus() ? bottleAIPoint_100.setprepresent() : bottleAIPoint_100.setpreclear();
      bottleAIPoint_100.setpreval(bottleAIPoint_100.getValue());
      bottleAIPoint_100.setClear();
      dummyint = bottleAIPoint_200.getStatus() ? bottleAIPoint_200.setprepresent() : bottleAIPoint_200.setpreclear();
      bottleAIPoint_200.setpreval(bottleAIPoint_200.getValue());
      bottleAIPoint_200.setClear();
      dummyint = CMDfb.getStatus() ? CMDfb.setprepresent() : CMDfb.setpreclear();
      CMDfb.setpreval(CMDfb.getValue());
      CMDfb.setClear();
      dummyint = bottleAtPos1.getStatus() ? bottleAtPos1.setprepresent() : bottleAtPos1.setpreclear();
      bottleAtPos1.setpreval(bottleAtPos1.getValue());
      bottleAtPos1.setClear();
      dummyint = bottleLeftPos5.getStatus() ? bottleLeftPos5.setprepresent() : bottleLeftPos5.setpreclear();
      bottleLeftPos5.setpreval(bottleLeftPos5.getValue());
      bottleLeftPos5.setClear();
      dummyint = dosUnitEvac.getStatus() ? dosUnitEvac.setprepresent() : dosUnitEvac.setpreclear();
      dosUnitEvac.setpreval(dosUnitEvac.getValue());
      dosUnitEvac.setClear();
      dummyint = dosUnitFilled.getStatus() ? dosUnitFilled.setprepresent() : dosUnitFilled.setpreclear();
      dosUnitFilled.setpreval(dosUnitFilled.getValue());
      dosUnitFilled.setClear();
      dummyint = bottleAtPos2.getStatus() ? bottleAtPos2.setprepresent() : bottleAtPos2.setpreclear();
      bottleAtPos2.setpreval(bottleAtPos2.getValue());
      bottleAtPos2.setClear();
      dummyint = pusherRetracted.getStatus() ? pusherRetracted.setprepresent() : pusherRetracted.setpreclear();
      pusherRetracted.setpreval(pusherRetracted.getValue());
      pusherRetracted.setClear();
      dummyint = pusherExtended.getStatus() ? pusherExtended.setprepresent() : pusherExtended.setpreclear();
      pusherExtended.setpreval(pusherExtended.getValue());
      pusherExtended.setClear();
      dummyint = WPgripped.getStatus() ? WPgripped.setprepresent() : WPgripped.setpreclear();
      WPgripped.setpreval(WPgripped.getValue());
      WPgripped.setClear();
      dummyint = armAtSource.getStatus() ? armAtSource.setprepresent() : armAtSource.setpreclear();
      armAtSource.setpreval(armAtSource.getValue());
      armAtSource.setClear();
      dummyint = armAtDest.getStatus() ? armAtDest.setprepresent() : armAtDest.setpreclear();
      armAtDest.setpreval(armAtDest.getValue());
      armAtDest.setClear();
      dummyint = empty.getStatus() ? empty.setprepresent() : empty.setpreclear();
      empty.setpreval(empty.getValue());
      empty.setClear();
      dummyint = bottleAtPos4.getStatus() ? bottleAtPos4.setprepresent() : bottleAtPos4.setpreclear();
      bottleAtPos4.setpreval(bottleAtPos4.getValue());
      bottleAtPos4.setClear();
      dummyint = gripperZAxisLowered.getStatus() ? gripperZAxisLowered.setprepresent() : gripperZAxisLowered.setpreclear();
      gripperZAxisLowered.setpreval(gripperZAxisLowered.getValue());
      gripperZAxisLowered.setClear();
      dummyint = gripperZAxisLifted.getStatus() ? gripperZAxisLifted.setprepresent() : gripperZAxisLifted.setpreclear();
      gripperZAxisLifted.setpreval(gripperZAxisLifted.getValue());
      gripperZAxisLifted.setClear();
      dummyint = gripperTurnHomePos.getStatus() ? gripperTurnHomePos.setprepresent() : gripperTurnHomePos.setpreclear();
      gripperTurnHomePos.setpreval(gripperTurnHomePos.getValue());
      gripperTurnHomePos.setClear();
      dummyint = gripperTurnFinalPos.getStatus() ? gripperTurnFinalPos.setprepresent() : gripperTurnFinalPos.setpreclear();
      gripperTurnFinalPos.setpreval(gripperTurnFinalPos.getValue());
      gripperTurnFinalPos.setClear();
      dummyint = bottleAtPos5.getStatus() ? bottleAtPos5.setprepresent() : bottleAtPos5.setpreclear();
      bottleAtPos5.setpreval(bottleAtPos5.getValue());
      bottleAtPos5.setClear();
      dummyint = bottleLeftPos5_final.getStatus() ? bottleLeftPos5_final.setprepresent() : bottleLeftPos5_final.setpreclear();
      bottleLeftPos5_final.setpreval(bottleLeftPos5_final.getValue());
      bottleLeftPos5_final.setClear();
      dummyint = conveyorStatus.getStatus() ? conveyorStatus.setprepresent() : conveyorStatus.setpreclear();
      conveyorStatus.setpreval(conveyorStatus.getValue());
      conveyorStatus.setClear();
      dummyint = bottleAIPos5.getStatus() ? bottleAIPos5.setprepresent() : bottleAIPos5.setpreclear();
      bottleAIPos5.setpreval(bottleAIPos5.getValue());
      bottleAIPos5.setClear();
      dummyint = capOnBottleAIPos1.getStatus() ? capOnBottleAIPos1.setprepresent() : capOnBottleAIPos1.setpreclear();
      capOnBottleAIPos1.setpreval(capOnBottleAIPos1.getValue());
      capOnBottleAIPos1.setClear();
      dummyint = tableAlignedWithSensor.getStatus() ? tableAlignedWithSensor.setprepresent() : tableAlignedWithSensor.setpreclear();
      tableAlignedWithSensor.setpreval(tableAlignedWithSensor.getValue());
      tableAlignedWithSensor.setClear();
      dummyint = rotaryStatus.getStatus() ? rotaryStatus.setprepresent() : rotaryStatus.setpreclear();
      rotaryStatus.setpreval(rotaryStatus.getValue());
      rotaryStatus.setClear();
      testOutput.sethook();
      testOutput.setClear();
      SysCo_Baxter_Done.sethook();
      SysCo_Baxter_Done.setClear();
      CMD.sethook();
      CMD.setClear();
      SysCo_Initial_Conveyor_Start.sethook();
      SysCo_Initial_Conveyor_Start.setClear();
      motConveyorOnOff.sethook();
      motConveyorOnOff.setClear();
      valveInjectorOnOff.sethook();
      valveInjectorOnOff.setClear();
      valveInletOnOff.sethook();
      valveInletOnOff.setClear();
      dosUnitValveRetract.sethook();
      dosUnitValveRetract.setClear();
      dosUnitValveExtend.sethook();
      dosUnitValveExtend.setClear();
      pusherExtend.sethook();
      pusherExtend.setClear();
      vacOn.sethook();
      vacOn.setClear();
      armSource.sethook();
      armSource.setClear();
      armDest.sethook();
      armDest.setClear();
      Cap_Load_Request.sethook();
      Cap_Load_Request.setClear();
      cylPos5ZaxisExtend.sethook();
      cylPos5ZaxisExtend.setClear();
      gripperTurnExtend.sethook();
      gripperTurnExtend.setClear();
      capGripperPos5Extend.sethook();
      capGripperPos5Extend.setClear();
      cylClampBottleExtend.sethook();
      cylClampBottleExtend.setClear();
      rotaryTableTrigger.sethook();
      rotaryTableTrigger.setClear();
      motConveyorOnOff_final.sethook();
      motConveyorOnOff_final.setClear();
      GUI_State_Update.sethook();
      GUI_State_Update.setClear();
      EABS_Batch_Complete.sethook();
      EABS_Batch_Complete.setClear();
      EABS_Order_Complete.sethook();
      EABS_Order_Complete.setClear();
      pusherRetracted_gui.sethook();
      pusherRetracted_gui.setClear();
      pusherExtended_gui.sethook();
      pusherExtended_gui.setClear();
      WPgripped_gui.sethook();
      WPgripped_gui.setClear();
      armAtSource_gui.sethook();
      armAtSource_gui.setClear();
      armAtDest_gui.sethook();
      armAtDest_gui.setClear();
      empty_gui.sethook();
      empty_gui.setClear();
      valveInjectorOnOff_gui.sethook();
      valveInjectorOnOff_gui.setClear();
      valveInletOnOff_gui.sethook();
      valveInletOnOff_gui.setClear();
      dosUnitValveRetract_gui.sethook();
      dosUnitValveRetract_gui.setClear();
      dosUnitValveExtend_gui.sethook();
      dosUnitValveExtend_gui.setClear();
      dosUnitEvac_gui.sethook();
      dosUnitEvac_gui.setClear();
      dosUnitFilled_gui.sethook();
      dosUnitFilled_gui.setClear();
      bottleAtPos1_gui.sethook();
      bottleAtPos1_gui.setClear();
      bottleAtPos2_gui.sethook();
      bottleAtPos2_gui.setClear();
      pusherExtend_gui.sethook();
      pusherExtend_gui.setClear();
      vacOn_gui.sethook();
      vacOn_gui.setClear();
      armSource_gui.sethook();
      armSource_gui.setClear();
      armDest_gui.sethook();
      armDest_gui.setClear();
      bottleAtPos3_gui.sethook();
      bottleAtPos3_gui.setClear();
      cylPos5ZaxisExtend_gui.sethook();
      cylPos5ZaxisExtend_gui.setClear();
      gripperTurnExtend_gui.sethook();
      gripperTurnExtend_gui.setClear();
      gripperTurnRetract_gui.sethook();
      gripperTurnRetract_gui.setClear();
      capGripperPos5Extend_gui.sethook();
      capGripperPos5Extend_gui.setClear();
      cylClampBottleExtend_gui.sethook();
      cylClampBottleExtend_gui.setClear();
      bottleAtPos4_gui.sethook();
      bottleAtPos4_gui.setClear();
      gripperZAxisLowered_gui.sethook();
      gripperZAxisLowered_gui.setClear();
      gripperZAxisLifted_gui.sethook();
      gripperZAxisLifted_gui.setClear();
      gripperTurnHomePos_gui.sethook();
      gripperTurnHomePos_gui.setClear();
      gripperTurnFinalPos_gui.sethook();
      gripperTurnFinalPos_gui.setClear();
      motConveyorOnOff_final_gui.sethook();
      motConveyorOnOff_final_gui.setClear();
      motConveyorOnOff_gui.sethook();
      motConveyorOnOff_gui.setClear();
      bottleAtPos5_gui.sethook();
      bottleAtPos5_gui.setClear();
      conveyorStatus_gui.sethook();
      conveyorStatus_gui.setClear();
      rotaryTableTrigger_gui.sethook();
      rotaryTableTrigger_gui.setClear();
      rotaryStatus_gui.sethook();
      rotaryStatus_gui.setClear();
      bottleAIPos5_rotary_gui.sethook();
      bottleAIPos5_rotary_gui.setClear();
      capOnBottleAIPos1_gui.sethook();
      capOnBottleAIPos1_gui.setClear();
      tableAlignedWithSensor_gui.sethook();
      tableAlignedWithSensor_gui.setClear();
      leftArm_POS_A_gui.sethook();
      leftArm_POS_A_gui.setClear();
      leftArm_POS_A_LOWERED_gui.sethook();
      leftArm_POS_A_LOWERED_gui.setClear();
      leftArm_POS_A_LOWERED_GRIPPED_gui.sethook();
      leftArm_POS_A_LOWERED_GRIPPED_gui.setClear();
      leftArm_POS_A_GRIPPED_gui.sethook();
      leftArm_POS_A_GRIPPED_gui.setClear();
      leftArm_POS_B_gui.sethook();
      leftArm_POS_B_gui.setClear();
      leftArm_POS_B_LOWERED_gui.sethook();
      leftArm_POS_B_LOWERED_gui.setClear();
      leftArm_POS_B_LOWERED_GRIPPED_gui.sethook();
      leftArm_POS_B_LOWERED_GRIPPED_gui.setClear();
      leftArm_POS_B_GRIPPED_gui.sethook();
      leftArm_POS_B_GRIPPED_gui.setClear();
      leftArm_POS_E_gui.sethook();
      leftArm_POS_E_gui.setClear();
      leftArm_POS_E_LOWERED_gui.sethook();
      leftArm_POS_E_LOWERED_gui.setClear();
      leftArm_POS_E_LOWERED_GRIPPED_gui.sethook();
      leftArm_POS_E_LOWERED_GRIPPED_gui.setClear();
      leftArm_POS_E_GRIPPED_gui.sethook();
      leftArm_POS_E_GRIPPED_gui.setClear();
      rightArm_POS_A_gui.sethook();
      rightArm_POS_A_gui.setClear();
      rightArm_POS_A_LOWERED_gui.sethook();
      rightArm_POS_A_LOWERED_gui.setClear();
      rightArm_POS_A_LOWERED_GRIPPED_gui.sethook();
      rightArm_POS_A_LOWERED_GRIPPED_gui.setClear();
      rightArm_POS_A_GRIPPED_gui.sethook();
      rightArm_POS_A_GRIPPED_gui.setClear();
      rightArm_POS_B_gui.sethook();
      rightArm_POS_B_gui.setClear();
      rightArm_POS_B_LOWERED_gui.sethook();
      rightArm_POS_B_LOWERED_gui.setClear();
      rightArm_POS_B_LOWERED_GRIPPED_gui.sethook();
      rightArm_POS_B_LOWERED_GRIPPED_gui.setClear();
      rightArm_POS_B_GRIPPED_gui.sethook();
      rightArm_POS_B_GRIPPED_gui.setClear();
      rightArm_POS_E_gui.sethook();
      rightArm_POS_E_gui.setClear();
      rightArm_POS_E_LOWERED_gui.sethook();
      rightArm_POS_E_LOWERED_gui.setClear();
      rightArm_POS_E_LOWERED_GRIPPED_gui.sethook();
      rightArm_POS_E_LOWERED_GRIPPED_gui.setClear();
      rightArm_POS_E_GRIPPED_gui.sethook();
      rightArm_POS_E_GRIPPED_gui.setClear();
      rightArm_POS_F_gui.sethook();
      rightArm_POS_F_gui.setClear();
      rightArm_POS_F_LOWERED_gui.sethook();
      rightArm_POS_F_LOWERED_gui.setClear();
      rightArm_POS_F_LOWERED_GRIPPED_gui.sethook();
      rightArm_POS_F_LOWERED_GRIPPED_gui.setClear();
      rightArm_POS_F_GRIPPED_gui.sethook();
      rightArm_POS_F_GRIPPED_gui.setClear();
      if(paused[1]!=0 || suspended[1]!=0 || active[1]!=1);
      else{
        testInput.gethook();
        Baxter_Start_Load_100.gethook();
        Baxter_Start_Load_200.gethook();
        Baxter_Start_UnLoad_100.gethook();
        Baxter_Start_UnLoad_200.gethook();
        Baxter_Start_UnLoad_Damaged.gethook();
        Baxter_Done.gethook();
        bottleAIPoint_100.gethook();
        bottleAIPoint_200.gethook();
        CMDfb.gethook();
        bottleAtPos1.gethook();
        bottleLeftPos5.gethook();
        dosUnitEvac.gethook();
        dosUnitFilled.gethook();
        bottleAtPos2.gethook();
        pusherRetracted.gethook();
        pusherExtended.gethook();
        WPgripped.gethook();
        armAtSource.gethook();
        armAtDest.gethook();
        empty.gethook();
        bottleAtPos4.gethook();
        gripperZAxisLowered.gethook();
        gripperZAxisLifted.gethook();
        gripperTurnHomePos.gethook();
        gripperTurnFinalPos.gethook();
        bottleAtPos5.gethook();
        bottleLeftPos5_final.gethook();
        conveyorStatus.gethook();
        bottleAIPos5.gethook();
        capOnBottleAIPos1.gethook();
        tableAlignedWithSensor.gethook();
        rotaryStatus.gethook();
      }
      runFinisher();
      if(active[1] == 0){
      	this.terminated = true;
      }
      if(!threaded) break;
    }
  }
}
